// Code generated by mockery v2.20.0. DO NOT EDIT.

package values

import (
	model "blynker/internal/model"

	mock "github.com/stretchr/testify/mock"
)

// RepositoryMock is an autogenerated mock type for the Repository type
type RepositoryMock struct {
	mock.Mock
}

// GetData provides a mock function with given fields:
func (_m *RepositoryMock) GetData() *model.Sensor {
	ret := _m.Called()

	var r0 *model.Sensor
	if rf, ok := ret.Get(0).(func() *model.Sensor); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.Sensor)
		}
	}

	return r0
}

// SaveData provides a mock function with given fields: data
func (_m *RepositoryMock) SaveData(data *model.Sensor) error {
	ret := _m.Called(data)

	var r0 error
	if rf, ok := ret.Get(0).(func(*model.Sensor) error); ok {
		r0 = rf(data)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewRepositoryMock creates a new instance of Repository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRepositoryMock(t mockConstructorTestingTNewRepository) *RepositoryMock {
	mock := &RepositoryMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
